name: Publish

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: |
              cd packages/rust-core
              npm run build
              strip *.node || true
          - host: macos-latest
            target: x86_64-apple-darwin
            build: |
              cd packages/rust-core
              npm run build
              strip -x *.node || true
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              cd packages/rust-core
              npm run build --target aarch64-apple-darwin
              strip -x *.node || true
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            build: |
              cd packages/rust-core
              npm run build

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            packages/rust-core/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies
        run: npm ci

      - name: Build native module
        run: ${{ matrix.settings.build }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.settings.target }}
          path: packages/rust-core/*.node
          if-no-files-found: error

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: npm ci

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move artifacts to packages
        run: |
          cp artifacts/binaries-*/livets_core.*.node packages/rust-core/ || true
          ls -la packages/rust-core/

      - name: Build all packages
        run: npm run build

      - name: Publish packages
        run: |
          # Publish packages in dependency order
          cd packages/rust-core && npm publish --access public
          cd ../core && npm publish --access public
          cd ../client && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish

    steps:
      - uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: LiveTS v${{ steps.get_version.outputs.version }}
          body: |
            ## LiveTS v${{ steps.get_version.outputs.version }}

            ### What's Changed
            - Real-time server-rendered web applications with TypeScript and Rust
            - Intelligent HTML diffing for efficient DOM updates
            - Generic class change detection for any CSS framework
            - High-performance WebSocket communication

            ### Installation
            ```bash
            npm install @livets/core @livets/client @livets/rust-core
            ```

            See the [documentation](https://github.com/${{ github.repository }}) for usage examples.
          draft: false
          prerelease: false
